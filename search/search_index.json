{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome System Design and Engineering (HCAI5CS001) | Center of AI - Herald College Kathmandu","text":"<p>This course equips students with the theoretical foundations and applied practices in system design and engineering. It covers concepts essential for building scalable, fault-tolerant, data-intensive, and production-ready applications. Emphasis is placed on distributed systems design, cloud-native architectures, and data engineering strategies, drawing on seminal works and real-world industry practices.</p>"},{"location":"#course-instructor","title":"Course Instructor","text":"<p>Mr. Aatiz Ghimire (Lead Instructor)</p> <p></p> <p>Siman Giri (Course Consultant)</p>"},{"location":"#register-for-the-course","title":"Register for the Course","text":"<p>Registration is Closed.</p> <p>~~You will be notified via email from the PAT office or College Administration once registration begins.~~</p> <p>~~After registration opens, you will be able to enroll by clicking the registration button on this page or using the link that will be shared.~~ ~~Register Here~~</p>"},{"location":"faq/","title":"\ud83d\udcd8 Frequently Asked Questions","text":""},{"location":"faq/#1-who-can-enroll-in-this-course","title":"1. Who can enroll in this course?","text":"<p>The course is designed for graduate-level (Above Level 5) students at Herald College Kathamdu. Students should have completed core modules in Introduction to Programming and Problem Solving, Fundamental of  Computing, Computer Networks, and Internet Software Architecture and  Database Systems. A working knowledge of Python and Linux is expected.</p>"},{"location":"faq/#2-how-can-i-register-for-the-course","title":"2. How can I register for the course?","text":"<p>Registrations are not yet open. Once they are, you will be notified via email from the PAT office or College Administration.</p> <p>After registration opens, you can register by clicking the \u201cRegister\u201d button on the Home Page or click here directly.</p>"},{"location":"faq/#3-is-there-an-interview-process","title":"3. Is there an interview process?","text":"<p>Depending on the number of applications received, the Center for AI may initiate a short interview process to ensure suitable placement and commitment.</p>"},{"location":"faq/#4-will-students-receive-credits-for-this-course","title":"4. Will students receive credits for this course?","text":"<p>This is an enrichment course and currently does not carry academic credit. However, it complements core modules and enhances employability through practical exposure.</p>"},{"location":"faq/#5-what-tools-and-programming-languages-will-be-used","title":"5. What tools and programming languages will be used?","text":"<p>Students will gain hands-on experience with:</p> <ul> <li>Languages: Python, SQL, YAML (for configs), JSON  </li> <li>Tools: Docker, Redis, PostgreSQL, MongoDB, Apache Kafka, RabbitMQ, FastAPI, NGINX, HAProxy, Git/GitHub  </li> <li>Command-line proficiency in Linux is essential.</li> </ul>"},{"location":"faq/#6-will-there-be-any-certification","title":"6. Will there be any certification?","text":"<p>Yes. Students completing the final design project and all assignments will receive a Certificate of Competency in Scalable System Design issued by the Center of AI.</p>"},{"location":"faq/#7-what-are-the-expected-outcomes","title":"7. What are the expected outcomes ?","text":"<p>Participants will acquire a robust understanding of backend scalability, distributed system resilience, and data pipeline design\u2014skills critical for roles in DevOps, MLOps, Software Architecture, and Platform Engineering.</p>"},{"location":"faq/#8-are-group-projects-allowed","title":"8. Are group projects allowed?","text":"<p>Yes. Final projects may be undertaken individually or in groups of up to 3-4 students, depending on the complexity of the system proposed.</p>"},{"location":"faq/#9-where-can-i-access-course-materials","title":"9. Where can I access course materials?","text":"<p>All course slides, lab instructions, reading materials, and submission portals will be made available via the GitHub repository. Physical reference ebooks will also be email after confirmation of participant list.</p>"},{"location":"faq/#10-will-there-be-assignments","title":"10. Will there be Assignments?","text":"<p>Yes, if you have not completed your weekly workshop. The tasks on the workshop class will be your assignment.</p>"},{"location":"faq/#11-is-attendance-mandatory","title":"11. Is attendance mandatory?","text":"<p>Yes. Attendance is mandatory for all lectures and workshops. Active participation is expected and contributes toward the final grade. </p>"},{"location":"faq/#12-can-i-withdraw-from-the-course-after-enrolling","title":"12. Can I withdraw from the course after enrolling?","text":"<p>Withdrawals are only permitted before the first official class session (Week 1). After this period, enrollment is locked and the student is expected to complete all coursework.</p>"},{"location":"overview/","title":"Course Overview","text":""},{"location":"overview/#learning-outcomes","title":"Learning Outcomes:","text":"<p>By the end of the course, students will be able to:</p> <ul> <li>Design scalable and distributed backend architectures.</li> <li>Perform latency-throughput trade-off analysis.</li> <li>Apply CAP theorem and ACID principles in data-intensive application scenarios.</li> <li>Construct caching, rate limiting, and load balancing mechanisms.</li> <li>Design and evaluate ML production systems and pipelines.</li> </ul>"},{"location":"overview/#reference-texts","title":"Reference Texts:","text":"<ul> <li>Designing Data-Intensive Applications by Martin Kleppmann</li> <li>Designing Machine Learning Systems by Chip Huyen</li> <li>System Design Interview by Alex Xu</li> <li> <p>System Design Primer by Donne Martin (GitHub Repository)</p> </li> <li> <p>System Design Byte Byte Go</p> </li> </ul>"},{"location":"overview/#lab-tools-and-technologies","title":"Lab Tools and Technologies:","text":"<p>Philosophy: we are not dependent on any tools and technology for this course but to understand the core architecture.</p> <p>Here are a few tools that we may encounter.</p> <ul> <li>Docker &amp; Docker Compose for service orchestration</li> <li>Redis / Memcached for caching experiments</li> <li>PostgreSQL / MongoDB / Cassandra for DB sharding</li> <li>Kafka / RabbitMQ for messaging queue implementation</li> <li>Nginx / HAProxy for load balancing demos</li> <li>Flask / FastAPI for service and gateway design</li> </ul>"},{"location":"overview/#final-design-project-examples","title":"Final Design Project Examples:","text":"<p>Final Design Projects are selected by students. Few examples that are able to be considered for projects are:</p> <ul> <li>Design a scalable YouTube-like video platform with ML recommendations</li> <li>Build a fault-tolerant URL shortener with replication and rate limiting</li> <li>Construct an e-commerce system backend with sharded search and event-driven stock updates</li> </ul>"},{"location":"schedule/","title":"Schedule","text":"<p>Here you will find the detailed weekly schedule and themes of the course. This proposed schedule is indicative and may be refined based on instructional needs and pacing.</p> Week Lecture Topics Workshop Topics Core Readings 1 Introduction to System Design and Engineering System Design Framework 2 Linux Crash Course / Shell Scripting Linux and beyond 3 Foundation of Web, Network and HTTP Wireshark, Ngnix, Self-Certificate 4 Databases and Storage PostgresSQL Workshop / CockroachDB 5 Cloud and Deployment Docker Workshop / K8s Workshop Deplyoment Codes 6 Caching, Performance and OS Redis Workshop 7 Security Few Security Systems, TOTP, Encryption Workshop 8 Payment and Fintech: Part I Payment and Fintech: Part II Esewa Epay Lab 9 Machine Learning, Big Data Systems, and High Availability 10 Real World Case Studies Student Project Presentations Review All"}]}